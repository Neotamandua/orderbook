// version of protocol buffer used
syntax = "proto3";

// package name for the buffer will be used later
package api;

service Greeter {
  rpc SayHello (HelloRequest) returns (HelloReply);
}

message HelloRequest {
 string name = 1;
}

message HelloReply {
  string message = 1;
}

service Api {
  rpc InsertBuyOrder (InsertOrderRequest) returns (InsertOrderReply);
  rpc RemoveBuyOrder (RemoveOrderRequest) returns (RemoveOrderReply);
  rpc InsertSellOrder (InsertOrderRequest) returns (InsertOrderReply);
  rpc RemoveSellOrder (RemoveOrderRequest) returns (RemoveOrderReply);
  rpc GetHighestBid (ClosestOrderRequest) returns (OrderReply);
  rpc GetLowestAsk (ClosestOrderRequest) returns (OrderReply);
  rpc GetBids (SideRequest) returns (OrderbookReply);
  rpc GetAsks (SideRequest) returns (OrderbookReply);
}

// Get one side of the Orderbook
message SideRequest {

}

message OrderbookReply {
  bytes serialized_orderbook = 1;
}

// Get highest bid or lowest ask
message ClosestOrderRequest {

}

message OrderReply {
  float order_price = 1;
  uint64 qty = 2;
}


// Insert Order
message InsertOrderRequest {
  OrderType order_type = 1;
  float order_price = 2;
  uint64 identifier = 3;
  uint64 qty = 4;
}

message InsertOrderReply {
  bool success = 1;
}

enum OrderType {
  Market = 0;
  GTC = 1;
  FOK = 2;
  IOC = 3;
}

// Remove Order
message RemoveOrderRequest {
  float order_price = 1;
  uint64 identifier = 2;
}

message RemoveOrderReply {
  bool success = 1;
}
